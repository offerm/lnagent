// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.1
// source: lncoordinator.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Task_Role int32

const (
	Task_INITIATOR Task_Role = 0
	Task_FOLLOWER  Task_Role = 1
)

// Enum value maps for Task_Role.
var (
	Task_Role_name = map[int32]string{
		0: "INITIATOR",
		1: "FOLLOWER",
	}
	Task_Role_value = map[string]int32{
		"INITIATOR": 0,
		"FOLLOWER":  1,
	}
)

func (x Task_Role) Enum() *Task_Role {
	p := new(Task_Role)
	*p = x
	return p
}

func (x Task_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_lncoordinator_proto_enumTypes[0].Descriptor()
}

func (Task_Role) Type() protoreflect.EnumType {
	return &file_lncoordinator_proto_enumTypes[0]
}

func (x Task_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task_Role.Descriptor instead.
func (Task_Role) EnumDescriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{5, 0}
}

type ChannelConstraints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	//The CSV delay expressed in relative blocks. If the channel is force closed,
	//we will need to wait for this many blocks before we can regain our funds.
	CsvDelay uint32 `protobuf:"varint,1,opt,name=csv_delay,json=csvDelay,proto3" json:"csv_delay,omitempty"`
	// The minimum satoshis this node is required to reserve in its balance.
	ChanReserveSat uint64 `protobuf:"varint,2,opt,name=chan_reserve_sat,json=chanReserveSat,proto3" json:"chan_reserve_sat,omitempty"`
	// The dust limit (in satoshis) of the initiator's commitment tx.
	DustLimitSat uint64 `protobuf:"varint,3,opt,name=dust_limit_sat,json=dustLimitSat,proto3" json:"dust_limit_sat,omitempty"`
	// The maximum amount of coins in millisatoshis that can be pending in this
	// channel.
	MaxPendingAmtMsat uint64 `protobuf:"varint,4,opt,name=max_pending_amt_msat,json=maxPendingAmtMsat,proto3" json:"max_pending_amt_msat,omitempty"`
	// The smallest HTLC in millisatoshis that the initiator will accept.
	MinHtlcMsat uint64 `protobuf:"varint,5,opt,name=min_htlc_msat,json=minHtlcMsat,proto3" json:"min_htlc_msat,omitempty"`
	// The total number of incoming HTLC's that the initiator will accept.
	MaxAcceptedHtlcs uint32 `protobuf:"varint,6,opt,name=max_accepted_htlcs,json=maxAcceptedHtlcs,proto3" json:"max_accepted_htlcs,omitempty"`
}

func (x *ChannelConstraints) Reset() {
	*x = ChannelConstraints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelConstraints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelConstraints) ProtoMessage() {}

func (x *ChannelConstraints) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelConstraints.ProtoReflect.Descriptor instead.
func (*ChannelConstraints) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{0}
}

func (x *ChannelConstraints) GetCsvDelay() uint32 {
	if x != nil {
		return x.CsvDelay
	}
	return 0
}

func (x *ChannelConstraints) GetChanReserveSat() uint64 {
	if x != nil {
		return x.ChanReserveSat
	}
	return 0
}

func (x *ChannelConstraints) GetDustLimitSat() uint64 {
	if x != nil {
		return x.DustLimitSat
	}
	return 0
}

func (x *ChannelConstraints) GetMaxPendingAmtMsat() uint64 {
	if x != nil {
		return x.MaxPendingAmtMsat
	}
	return 0
}

func (x *ChannelConstraints) GetMinHtlcMsat() uint64 {
	if x != nil {
		return x.MinHtlcMsat
	}
	return 0
}

func (x *ChannelConstraints) GetMaxAcceptedHtlcs() uint32 {
	if x != nil {
		return x.MaxAcceptedHtlcs
	}
	return 0
}

type Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether this channel is active or not
	Active bool `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	// The identity pubkey of the remote node
	RemotePubkey string `protobuf:"bytes,2,opt,name=remote_pubkey,json=remotePubkey,proto3" json:"remote_pubkey,omitempty"`
	//
	//The outpoint (txid:index) of the funding transaction. With this value, Bob
	//will be able to generate a signature for Alice's version of the commitment
	//transaction.
	ChannelPoint string `protobuf:"bytes,3,opt,name=channel_point,json=channelPoint,proto3" json:"channel_point,omitempty"`
	//
	//The unique channel ID for the channel. The first 3 bytes are the block
	//height, the next 3 the index within the block, and the last 2 bytes are the
	//output index for the channel.
	ChanId uint64 `protobuf:"varint,4,opt,name=chan_id,json=chanId,proto3" json:"chan_id,omitempty"`
	// The total amount of funds held in this channel
	Capacity int64 `protobuf:"varint,5,opt,name=capacity,proto3" json:"capacity,omitempty"`
	// This node's current balance in this channel
	LocalBalance int64 `protobuf:"varint,6,opt,name=local_balance,json=localBalance,proto3" json:"local_balance,omitempty"`
	// The counterparty's current balance in this channel
	RemoteBalance int64 `protobuf:"varint,7,opt,name=remote_balance,json=remoteBalance,proto3" json:"remote_balance,omitempty"`
	//
	//The amount calculated to be paid in fees for the current set of commitment
	//transactions. The fee amount is persisted with the channel in order to
	//allow the fee amount to be removed and recalculated with each channel state
	//update, including updates that happen after a system restart.
	CommitFee int64 `protobuf:"varint,8,opt,name=commit_fee,json=commitFee,proto3" json:"commit_fee,omitempty"`
	// The weight of the commitment transaction
	CommitWeight int64 `protobuf:"varint,9,opt,name=commit_weight,json=commitWeight,proto3" json:"commit_weight,omitempty"`
	//
	//The required number of satoshis per kilo-weight that the requester will pay
	//at all times, for both the funding transaction and commitment transaction.
	//This value can later be updated once the channel is open.
	FeePerKw int64 `protobuf:"varint,10,opt,name=fee_per_kw,json=feePerKw,proto3" json:"fee_per_kw,omitempty"`
	// The unsettled balance in this channel
	UnsettledBalance int64 `protobuf:"varint,11,opt,name=unsettled_balance,json=unsettledBalance,proto3" json:"unsettled_balance,omitempty"`
	//
	//Deprecated. The CSV delay expressed in relative blocks. If the channel is
	//force closed, we will need to wait for this many blocks before we can regain
	//our funds.
	//
	// Deprecated: Do not use.
	CsvDelay uint32 `protobuf:"varint,16,opt,name=csv_delay,json=csvDelay,proto3" json:"csv_delay,omitempty"`
	// Whether this channel is advertised to the network or not.
	Private bool `protobuf:"varint,17,opt,name=private,proto3" json:"private,omitempty"`
	// A set of flags showing the current state of the channel.
	ChanStatusFlags string `protobuf:"bytes,19,opt,name=chan_status_flags,json=chanStatusFlags,proto3" json:"chan_status_flags,omitempty"`
	// List constraints for the local node.
	LocalConstraints *ChannelConstraints `protobuf:"bytes,29,opt,name=local_constraints,json=localConstraints,proto3" json:"local_constraints,omitempty"`
	// List constraints for the remote node.
	RemoteConstraints *ChannelConstraints `protobuf:"bytes,30,opt,name=remote_constraints,json=remoteConstraints,proto3" json:"remote_constraints,omitempty"`
	// The base fee charged regardless of the number of milli-satoshis sent.
	BaseFeeMsat int64 `protobuf:"varint,31,opt,name=base_fee_msat,json=baseFeeMsat,proto3" json:"base_fee_msat,omitempty"`
	// The amount charged per milli-satoshis transferred expressed in
	// millionths of a satoshi.
	FeePerMil int64 `protobuf:"varint,32,opt,name=fee_per_mil,json=feePerMil,proto3" json:"fee_per_mil,omitempty"`
	// The effective fee rate in milli-satoshis. Computed by dividing the
	// fee_per_mil value by 1 million.
	FeeRate float64 `protobuf:"fixed64,33,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`
}

func (x *Channel) Reset() {
	*x = Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{1}
}

func (x *Channel) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Channel) GetRemotePubkey() string {
	if x != nil {
		return x.RemotePubkey
	}
	return ""
}

func (x *Channel) GetChannelPoint() string {
	if x != nil {
		return x.ChannelPoint
	}
	return ""
}

func (x *Channel) GetChanId() uint64 {
	if x != nil {
		return x.ChanId
	}
	return 0
}

func (x *Channel) GetCapacity() int64 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *Channel) GetLocalBalance() int64 {
	if x != nil {
		return x.LocalBalance
	}
	return 0
}

func (x *Channel) GetRemoteBalance() int64 {
	if x != nil {
		return x.RemoteBalance
	}
	return 0
}

func (x *Channel) GetCommitFee() int64 {
	if x != nil {
		return x.CommitFee
	}
	return 0
}

func (x *Channel) GetCommitWeight() int64 {
	if x != nil {
		return x.CommitWeight
	}
	return 0
}

func (x *Channel) GetFeePerKw() int64 {
	if x != nil {
		return x.FeePerKw
	}
	return 0
}

func (x *Channel) GetUnsettledBalance() int64 {
	if x != nil {
		return x.UnsettledBalance
	}
	return 0
}

// Deprecated: Do not use.
func (x *Channel) GetCsvDelay() uint32 {
	if x != nil {
		return x.CsvDelay
	}
	return 0
}

func (x *Channel) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *Channel) GetChanStatusFlags() string {
	if x != nil {
		return x.ChanStatusFlags
	}
	return ""
}

func (x *Channel) GetLocalConstraints() *ChannelConstraints {
	if x != nil {
		return x.LocalConstraints
	}
	return nil
}

func (x *Channel) GetRemoteConstraints() *ChannelConstraints {
	if x != nil {
		return x.RemoteConstraints
	}
	return nil
}

func (x *Channel) GetBaseFeeMsat() int64 {
	if x != nil {
		return x.BaseFeeMsat
	}
	return 0
}

func (x *Channel) GetFeePerMil() int64 {
	if x != nil {
		return x.FeePerMil
	}
	return 0
}

func (x *Channel) GetFeeRate() float64 {
	if x != nil {
		return x.FeeRate
	}
	return 0
}

type StatusUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// public key of the node sedning the message
	Pubkey string `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// signature of Channels message include in this StatusUpdate. Must be signed by the sendng pubkey
	StatusSignature string `protobuf:"bytes,3,opt,name=status_signature,json=statusSignature,proto3" json:"status_signature,omitempty"`
	// re-balance budget expressed as percentage [0-100]. The actual budget is calculated as a multiply of
	// the number of sats being rebalanced divided 1M by the channel routing PPM and by the percentage.
	// For example, if 2M sats are being rebalanced, the channel PPM (fee_per_mil) is 90 and the percentage is 40%
	// the calculated budget is 74 sats (2M/1M*90*40%). The budget is earned by the ln-coordinator and may also be
	// used to pay nodes for routing services
	RebalanceBudgetPpmPercent float64 `protobuf:"fixed64,4,opt,name=rebalance_budget_ppm_percent,json=rebalanceBudgetPpmPercent,proto3" json:"rebalance_budget_ppm_percent,omitempty"`
	// channel_rebalanbce_low_trigger and channel_rebalanbce_high_trigger define the points at which the channel
	// become rebalance candidate. The value is expressed as percentage [0-100].
	// The actual value is calculated by dividing the local balance by the channel capacity and multiply by 100.0
	// if the actual value is below the channel_rebalanbce_low_trigger or above channel_rebalanbce_high_trigger the
	// ln-coordinator will try to rebalance the channel with the allowed budget
	ChannelRebalanbceLowTrigger  float64 `protobuf:"fixed64,5,opt,name=channel_rebalanbce_low_trigger,json=channelRebalanbceLowTrigger,proto3" json:"channel_rebalanbce_low_trigger,omitempty"`
	ChannelRebalanbceHighTrigger float64 `protobuf:"fixed64,6,opt,name=channel_rebalanbce_high_trigger,json=channelRebalanbceHighTrigger,proto3" json:"channel_rebalanbce_high_trigger,omitempty"`
	// channel_rebalance_target defines a target percentage for the rebalance.  The actual is calculated as local balance
	// divided by channel capacity times 100.0 .
	// Rebalance target must be between channel_rebalanbce_low_trigger and channel_rebalanbce_high_trigger.
	// example: a channel of 10M sats. Current local is 1M. Low is 20%. Target is 50%. channel's ppm is 90. budget is 40%:
	// the ln-coordinator will attempt to rebalance 4M sats (from remote to local) while using a budget of 144 sats.
	ChannelRebalanceTarget float64    `protobuf:"fixed64,7,opt,name=channel_rebalance_target,json=channelRebalanceTarget,proto3" json:"channel_rebalance_target,omitempty"`
	Channels               []*Channel `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *StatusUpdateRequest) Reset() {
	*x = StatusUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusUpdateRequest) ProtoMessage() {}

func (x *StatusUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusUpdateRequest.ProtoReflect.Descriptor instead.
func (*StatusUpdateRequest) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{2}
}

func (x *StatusUpdateRequest) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *StatusUpdateRequest) GetStatusSignature() string {
	if x != nil {
		return x.StatusSignature
	}
	return ""
}

func (x *StatusUpdateRequest) GetRebalanceBudgetPpmPercent() float64 {
	if x != nil {
		return x.RebalanceBudgetPpmPercent
	}
	return 0
}

func (x *StatusUpdateRequest) GetChannelRebalanbceLowTrigger() float64 {
	if x != nil {
		return x.ChannelRebalanbceLowTrigger
	}
	return 0
}

func (x *StatusUpdateRequest) GetChannelRebalanbceHighTrigger() float64 {
	if x != nil {
		return x.ChannelRebalanbceHighTrigger
	}
	return 0
}

func (x *StatusUpdateRequest) GetChannelRebalanceTarget() float64 {
	if x != nil {
		return x.ChannelRebalanceTarget
	}
	return 0
}

func (x *StatusUpdateRequest) GetChannels() []*Channel {
	if x != nil {
		return x.Channels
	}
	return nil
}

type StatusUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatusUpdateResponse) Reset() {
	*x = StatusUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusUpdateResponse) ProtoMessage() {}

func (x *StatusUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusUpdateResponse.ProtoReflect.Descriptor instead.
func (*StatusUpdateResponse) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{3}
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The public key of the peer in this payment
	PeerPubKey []byte `protobuf:"bytes,1,opt,name=peer_pub_key,json=peerPubKey,proto3" json:"peer_pub_key,omitempty"`
	// The channelId for this payment
	ChanId uint64 `protobuf:"varint,2,opt,name=chan_id,json=chanId,proto3" json:"chan_id,omitempty"`
	// The amount of msat for this payment
	AmtMsat uint64 `protobuf:"varint,3,opt,name=amt_msat,json=amtMsat,proto3" json:"amt_msat,omitempty"`
	// The amount of msat to pay for this payment fee
	FeeMsat uint64 `protobuf:"varint,4,opt,name=fee_msat,json=feeMsat,proto3" json:"fee_msat,omitempty"`
	// The time lock for this payment
	TimeLock uint32 `protobuf:"varint,5,opt,name=time_lock,json=timeLock,proto3" json:"time_lock,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{4}
}

func (x *Payment) GetPeerPubKey() []byte {
	if x != nil {
		return x.PeerPubKey
	}
	return nil
}

func (x *Payment) GetChanId() uint64 {
	if x != nil {
		return x.ChanId
	}
	return 0
}

func (x *Payment) GetAmtMsat() uint64 {
	if x != nil {
		return x.AmtMsat
	}
	return 0
}

func (x *Payment) GetFeeMsat() uint64 {
	if x != nil {
		return x.FeeMsat
	}
	return 0
}

func (x *Payment) GetTimeLock() uint32 {
	if x != nil {
		return x.TimeLock
	}
	return 0
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Swap_ID string `protobuf:"bytes,1,opt,name=swap_ID,json=swapID,proto3" json:"swap_ID,omitempty"`
	Pubkey  string `protobuf:"bytes,5,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// Types that are assignable to Type:
	//	*Task_InitType
	//	*Task_SwapType
	//	*Task_CancelType
	Type isTask_Type `protobuf_oneof:"type"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{5}
}

func (x *Task) GetSwap_ID() string {
	if x != nil {
		return x.Swap_ID
	}
	return ""
}

func (x *Task) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (m *Task) GetType() isTask_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Task) GetInitType() *Task_Init {
	if x, ok := x.GetType().(*Task_InitType); ok {
		return x.InitType
	}
	return nil
}

func (x *Task) GetSwapType() *Task_Swap {
	if x, ok := x.GetType().(*Task_SwapType); ok {
		return x.SwapType
	}
	return nil
}

func (x *Task) GetCancelType() *Task_Cancel {
	if x, ok := x.GetType().(*Task_CancelType); ok {
		return x.CancelType
	}
	return nil
}

type isTask_Type interface {
	isTask_Type()
}

type Task_InitType struct {
	InitType *Task_Init `protobuf:"bytes,2,opt,name=init_type,json=initType,proto3,oneof"`
}

type Task_SwapType struct {
	SwapType *Task_Swap `protobuf:"bytes,3,opt,name=swap_type,json=swapType,proto3,oneof"`
}

type Task_CancelType struct {
	CancelType *Task_Cancel `protobuf:"bytes,4,opt,name=cancel_type,json=cancelType,proto3,oneof"`
}

func (*Task_InitType) isTask_Type() {}

func (*Task_SwapType) isTask_Type() {}

func (*Task_CancelType) isTask_Type() {}

type TaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Swap_ID      string `protobuf:"bytes,1,opt,name=swap_ID,json=swapID,proto3" json:"swap_ID,omitempty"`
	Pubkey       string `protobuf:"bytes,9,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	MsgSignature string `protobuf:"bytes,10,opt,name=msg_signature,json=msgSignature,proto3" json:"msg_signature,omitempty"`
	// Types that are assignable to Response:
	//	*TaskResponse_InitDoneType
	//	*TaskResponse_PaymentInitiatedType
	//	*TaskResponse_CancelDoneType
	//	*TaskResponse_ErrorType
	//	*TaskResponse_PaymentLockedType
	//	*TaskResponse_PaymentSettledType
	//	*TaskResponse_SwapDoneType
	Response isTaskResponse_Response `protobuf_oneof:"response"`
}

func (x *TaskResponse) Reset() {
	*x = TaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse) ProtoMessage() {}

func (x *TaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse.ProtoReflect.Descriptor instead.
func (*TaskResponse) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{6}
}

func (x *TaskResponse) GetSwap_ID() string {
	if x != nil {
		return x.Swap_ID
	}
	return ""
}

func (x *TaskResponse) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *TaskResponse) GetMsgSignature() string {
	if x != nil {
		return x.MsgSignature
	}
	return ""
}

func (m *TaskResponse) GetResponse() isTaskResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *TaskResponse) GetInitDoneType() *TaskResponse_Init_Done {
	if x, ok := x.GetResponse().(*TaskResponse_InitDoneType); ok {
		return x.InitDoneType
	}
	return nil
}

func (x *TaskResponse) GetPaymentInitiatedType() *TaskResponse_Payment_Initiated {
	if x, ok := x.GetResponse().(*TaskResponse_PaymentInitiatedType); ok {
		return x.PaymentInitiatedType
	}
	return nil
}

func (x *TaskResponse) GetCancelDoneType() *TaskResponse_Cancel_Done {
	if x, ok := x.GetResponse().(*TaskResponse_CancelDoneType); ok {
		return x.CancelDoneType
	}
	return nil
}

func (x *TaskResponse) GetErrorType() *TaskResponse_Error {
	if x, ok := x.GetResponse().(*TaskResponse_ErrorType); ok {
		return x.ErrorType
	}
	return nil
}

func (x *TaskResponse) GetPaymentLockedType() *TaskResponse_Payment_Locked {
	if x, ok := x.GetResponse().(*TaskResponse_PaymentLockedType); ok {
		return x.PaymentLockedType
	}
	return nil
}

func (x *TaskResponse) GetPaymentSettledType() *TaskResponse_Payment_Settled {
	if x, ok := x.GetResponse().(*TaskResponse_PaymentSettledType); ok {
		return x.PaymentSettledType
	}
	return nil
}

func (x *TaskResponse) GetSwapDoneType() *TaskResponse_Swap_Done {
	if x, ok := x.GetResponse().(*TaskResponse_SwapDoneType); ok {
		return x.SwapDoneType
	}
	return nil
}

type isTaskResponse_Response interface {
	isTaskResponse_Response()
}

type TaskResponse_InitDoneType struct {
	InitDoneType *TaskResponse_Init_Done `protobuf:"bytes,2,opt,name=init_done_type,json=initDoneType,proto3,oneof"`
}

type TaskResponse_PaymentInitiatedType struct {
	PaymentInitiatedType *TaskResponse_Payment_Initiated `protobuf:"bytes,3,opt,name=payment_initiated_type,json=paymentInitiatedType,proto3,oneof"`
}

type TaskResponse_CancelDoneType struct {
	CancelDoneType *TaskResponse_Cancel_Done `protobuf:"bytes,4,opt,name=cancel_done_type,json=cancelDoneType,proto3,oneof"`
}

type TaskResponse_ErrorType struct {
	ErrorType *TaskResponse_Error `protobuf:"bytes,5,opt,name=error_type,json=errorType,proto3,oneof"`
}

type TaskResponse_PaymentLockedType struct {
	PaymentLockedType *TaskResponse_Payment_Locked `protobuf:"bytes,6,opt,name=payment_locked_type,json=paymentLockedType,proto3,oneof"`
}

type TaskResponse_PaymentSettledType struct {
	PaymentSettledType *TaskResponse_Payment_Settled `protobuf:"bytes,7,opt,name=payment_settled_type,json=paymentSettledType,proto3,oneof"`
}

type TaskResponse_SwapDoneType struct {
	SwapDoneType *TaskResponse_Swap_Done `protobuf:"bytes,8,opt,name=swap_done_type,json=swapDoneType,proto3,oneof"`
}

func (*TaskResponse_InitDoneType) isTaskResponse_Response() {}

func (*TaskResponse_PaymentInitiatedType) isTaskResponse_Response() {}

func (*TaskResponse_CancelDoneType) isTaskResponse_Response() {}

func (*TaskResponse_ErrorType) isTaskResponse_Response() {}

func (*TaskResponse_PaymentLockedType) isTaskResponse_Response() {}

func (*TaskResponse_PaymentSettledType) isTaskResponse_Response() {}

func (*TaskResponse_SwapDoneType) isTaskResponse_Response() {}

// Init is sent to each agent in the rebalance cycle.
//Each agent but the initiator accepts the payment_request that it should use for payment.
//The initiator accepts the payment request with the Swap Task
type Task_Init struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role           Task_Role `protobuf:"varint,1,opt,name=role,proto3,enum=protobuf.Task_Role" json:"role,omitempty"`
	From           *Payment  `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To             *Payment  `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	PaymentRequest string    `protobuf:"bytes,4,opt,name=payment_request,json=paymentRequest,proto3" json:"payment_request,omitempty"`
}

func (x *Task_Init) Reset() {
	*x = Task_Init{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_Init) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Init) ProtoMessage() {}

func (x *Task_Init) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Init.ProtoReflect.Descriptor instead.
func (*Task_Init) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Task_Init) GetRole() Task_Role {
	if x != nil {
		return x.Role
	}
	return Task_INITIATOR
}

func (x *Task_Init) GetFrom() *Payment {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Task_Init) GetTo() *Payment {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Task_Init) GetPaymentRequest() string {
	if x != nil {
		return x.PaymentRequest
	}
	return ""
}

// Swap is sent only to the initiator
type Task_Swap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentRequest string `protobuf:"bytes,1,opt,name=payment_request,json=paymentRequest,proto3" json:"payment_request,omitempty"`
}

func (x *Task_Swap) Reset() {
	*x = Task_Swap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_Swap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Swap) ProtoMessage() {}

func (x *Task_Swap) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Swap.ProtoReflect.Descriptor instead.
func (*Task_Swap) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{5, 1}
}

func (x *Task_Swap) GetPaymentRequest() string {
	if x != nil {
		return x.PaymentRequest
	}
	return ""
}

type Task_Cancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *Task_Cancel) Reset() {
	*x = Task_Cancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_Cancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Cancel) ProtoMessage() {}

func (x *Task_Cancel) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Cancel.ProtoReflect.Descriptor instead.
func (*Task_Cancel) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{5, 2}
}

func (x *Task_Cancel) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type TaskResponse_Init_Done struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentRequest string `protobuf:"bytes,1,opt,name=payment_request,json=paymentRequest,proto3" json:"payment_request,omitempty"`
}

func (x *TaskResponse_Init_Done) Reset() {
	*x = TaskResponse_Init_Done{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResponse_Init_Done) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse_Init_Done) ProtoMessage() {}

func (x *TaskResponse_Init_Done) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse_Init_Done.ProtoReflect.Descriptor instead.
func (*TaskResponse_Init_Done) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{6, 0}
}

func (x *TaskResponse_Init_Done) GetPaymentRequest() string {
	if x != nil {
		return x.PaymentRequest
	}
	return ""
}

type TaskResponse_Payment_Initiated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskResponse_Payment_Initiated) Reset() {
	*x = TaskResponse_Payment_Initiated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResponse_Payment_Initiated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse_Payment_Initiated) ProtoMessage() {}

func (x *TaskResponse_Payment_Initiated) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse_Payment_Initiated.ProtoReflect.Descriptor instead.
func (*TaskResponse_Payment_Initiated) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{6, 1}
}

type TaskResponse_Cancel_Done struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskResponse_Cancel_Done) Reset() {
	*x = TaskResponse_Cancel_Done{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResponse_Cancel_Done) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse_Cancel_Done) ProtoMessage() {}

func (x *TaskResponse_Cancel_Done) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse_Cancel_Done.ProtoReflect.Descriptor instead.
func (*TaskResponse_Cancel_Done) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{6, 2}
}

type TaskResponse_Payment_Locked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskResponse_Payment_Locked) Reset() {
	*x = TaskResponse_Payment_Locked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResponse_Payment_Locked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse_Payment_Locked) ProtoMessage() {}

func (x *TaskResponse_Payment_Locked) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse_Payment_Locked.ProtoReflect.Descriptor instead.
func (*TaskResponse_Payment_Locked) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{6, 3}
}

type TaskResponse_Payment_Settled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskResponse_Payment_Settled) Reset() {
	*x = TaskResponse_Payment_Settled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResponse_Payment_Settled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse_Payment_Settled) ProtoMessage() {}

func (x *TaskResponse_Payment_Settled) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse_Payment_Settled.ProtoReflect.Descriptor instead.
func (*TaskResponse_Payment_Settled) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{6, 4}
}

type TaskResponse_Swap_Done struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskResponse_Swap_Done) Reset() {
	*x = TaskResponse_Swap_Done{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResponse_Swap_Done) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse_Swap_Done) ProtoMessage() {}

func (x *TaskResponse_Swap_Done) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse_Swap_Done.ProtoReflect.Descriptor instead.
func (*TaskResponse_Swap_Done) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{6, 5}
}

type TaskResponse_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TaskResponse_Error) Reset() {
	*x = TaskResponse_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lncoordinator_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResponse_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse_Error) ProtoMessage() {}

func (x *TaskResponse_Error) ProtoReflect() protoreflect.Message {
	mi := &file_lncoordinator_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse_Error.ProtoReflect.Descriptor instead.
func (*TaskResponse_Error) Descriptor() ([]byte, []int) {
	return file_lncoordinator_proto_rawDescGZIP(), []int{6, 6}
}

func (x *TaskResponse_Error) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_lncoordinator_proto protoreflect.FileDescriptor

var file_lncoordinator_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6c, 0x6e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x22,
	0x84, 0x02, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x73, 0x76, 0x5f, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x73, 0x76, 0x44, 0x65,
	0x6c, 0x61, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x5f, 0x73, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63,
	0x68, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x53, 0x61, 0x74, 0x12, 0x24, 0x0a,
	0x0e, 0x64, 0x75, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x75, 0x73, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x53, 0x61, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x61, 0x6d, 0x74, 0x5f, 0x6d, 0x73, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x6d, 0x74,
	0x4d, 0x73, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x5f, 0x68, 0x74, 0x6c, 0x63,
	0x5f, 0x6d, 0x73, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x69, 0x6e,
	0x48, 0x74, 0x6c, 0x63, 0x4d, 0x73, 0x61, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x74, 0x6c, 0x63, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x64, 0x48, 0x74, 0x6c, 0x63, 0x73, 0x22, 0xdd, 0x05, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a,
	0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x46, 0x65, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a,
	0x0a, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6b, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x66, 0x65, 0x65, 0x50, 0x65, 0x72, 0x4b, 0x77, 0x12, 0x2b, 0x0a, 0x11, 0x75,
	0x6e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x09, 0x63, 0x73, 0x76, 0x5f,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x08, 0x63, 0x73, 0x76, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x68, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12,
	0x49, 0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x4b, 0x0a, 0x12, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x73, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x66, 0x65, 0x65, 0x5f, 0x6d, 0x73, 0x61, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x62, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x4d, 0x73, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x66,
	0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6c, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x66, 0x65, 0x65, 0x50, 0x65, 0x72, 0x4d, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x66,
	0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x66,
	0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x22, 0x8e, 0x03, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x72, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x62,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x70, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x19, 0x72, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x50, 0x70, 0x6d, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x12, 0x43, 0x0a, 0x1e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x62, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x1b, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x62, 0x63, 0x65, 0x4c, 0x6f, 0x77,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x1f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x72, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x62, 0x63, 0x65, 0x5f, 0x68, 0x69,
	0x67, 0x68, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x1c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x62, 0x63, 0x65, 0x48, 0x69, 0x67, 0x68, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x38,
	0x0a, 0x18, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x16, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x08, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x97, 0x01, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x70,
	0x65, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x70, 0x65, 0x65, 0x72, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x63, 0x68, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6d, 0x74, 0x5f, 0x6d, 0x73,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6d, 0x74, 0x4d, 0x73, 0x61,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x5f, 0x6d, 0x73, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x65, 0x65, 0x4d, 0x73, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x22, 0xfe, 0x03, 0x0a, 0x04, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x77, 0x61, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x00, 0x52, 0x08, 0x69,
	0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x70, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x48,
	0x00, 0x52, 0x08, 0x73, 0x77, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x1a, 0xa2, 0x01, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x27,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x21,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x0a, 0x04, 0x53, 0x77,
	0x61, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x0a, 0x06, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x23, 0x0a,
	0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x54,
	0x4f, 0x52, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x52,
	0x10, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xd5, 0x06, 0x0a, 0x0c, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x77, 0x61, 0x70, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x77,
	0x61, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d,
	0x6d, 0x73, 0x67, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x73, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x48, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x5f, 0x44, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x69,
	0x6e, 0x69, 0x74, 0x44, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x60, 0x0a, 0x16, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x14, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a,
	0x10, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x44, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x44, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x57, 0x0a, 0x13,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5a, 0x0a, 0x14, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x48, 0x0a, 0x0e, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x5f, 0x44, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x73,
	0x77, 0x61, 0x70, 0x44, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x34, 0x0a, 0x09, 0x49,
	0x6e, 0x69, 0x74, 0x5f, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x0d, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x5f, 0x44, 0x6f, 0x6e, 0x65, 0x1a, 0x10, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x1a, 0x11, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x1a, 0x0b, 0x0a, 0x09, 0x53, 0x77,
	0x61, 0x70, 0x5f, 0x44, 0x6f, 0x6e, 0x65, 0x1a, 0x1d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0x95, 0x01, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x6d, 0x2f,
	0x6c, 0x6e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lncoordinator_proto_rawDescOnce sync.Once
	file_lncoordinator_proto_rawDescData = file_lncoordinator_proto_rawDesc
)

func file_lncoordinator_proto_rawDescGZIP() []byte {
	file_lncoordinator_proto_rawDescOnce.Do(func() {
		file_lncoordinator_proto_rawDescData = protoimpl.X.CompressGZIP(file_lncoordinator_proto_rawDescData)
	})
	return file_lncoordinator_proto_rawDescData
}

var file_lncoordinator_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_lncoordinator_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_lncoordinator_proto_goTypes = []interface{}{
	(Task_Role)(0),                         // 0: protobuf.Task.Role
	(*ChannelConstraints)(nil),             // 1: protobuf.ChannelConstraints
	(*Channel)(nil),                        // 2: protobuf.Channel
	(*StatusUpdateRequest)(nil),            // 3: protobuf.StatusUpdateRequest
	(*StatusUpdateResponse)(nil),           // 4: protobuf.StatusUpdateResponse
	(*Payment)(nil),                        // 5: protobuf.Payment
	(*Task)(nil),                           // 6: protobuf.Task
	(*TaskResponse)(nil),                   // 7: protobuf.TaskResponse
	(*Task_Init)(nil),                      // 8: protobuf.Task.Init
	(*Task_Swap)(nil),                      // 9: protobuf.Task.Swap
	(*Task_Cancel)(nil),                    // 10: protobuf.Task.Cancel
	(*TaskResponse_Init_Done)(nil),         // 11: protobuf.TaskResponse.Init_Done
	(*TaskResponse_Payment_Initiated)(nil), // 12: protobuf.TaskResponse.Payment_Initiated
	(*TaskResponse_Cancel_Done)(nil),       // 13: protobuf.TaskResponse.Cancel_Done
	(*TaskResponse_Payment_Locked)(nil),    // 14: protobuf.TaskResponse.Payment_Locked
	(*TaskResponse_Payment_Settled)(nil),   // 15: protobuf.TaskResponse.Payment_Settled
	(*TaskResponse_Swap_Done)(nil),         // 16: protobuf.TaskResponse.Swap_Done
	(*TaskResponse_Error)(nil),             // 17: protobuf.TaskResponse.Error
}
var file_lncoordinator_proto_depIdxs = []int32{
	1,  // 0: protobuf.Channel.local_constraints:type_name -> protobuf.ChannelConstraints
	1,  // 1: protobuf.Channel.remote_constraints:type_name -> protobuf.ChannelConstraints
	2,  // 2: protobuf.StatusUpdateRequest.channels:type_name -> protobuf.Channel
	8,  // 3: protobuf.Task.init_type:type_name -> protobuf.Task.Init
	9,  // 4: protobuf.Task.swap_type:type_name -> protobuf.Task.Swap
	10, // 5: protobuf.Task.cancel_type:type_name -> protobuf.Task.Cancel
	11, // 6: protobuf.TaskResponse.init_done_type:type_name -> protobuf.TaskResponse.Init_Done
	12, // 7: protobuf.TaskResponse.payment_initiated_type:type_name -> protobuf.TaskResponse.Payment_Initiated
	13, // 8: protobuf.TaskResponse.cancel_done_type:type_name -> protobuf.TaskResponse.Cancel_Done
	17, // 9: protobuf.TaskResponse.error_type:type_name -> protobuf.TaskResponse.Error
	14, // 10: protobuf.TaskResponse.payment_locked_type:type_name -> protobuf.TaskResponse.Payment_Locked
	15, // 11: protobuf.TaskResponse.payment_settled_type:type_name -> protobuf.TaskResponse.Payment_Settled
	16, // 12: protobuf.TaskResponse.swap_done_type:type_name -> protobuf.TaskResponse.Swap_Done
	0,  // 13: protobuf.Task.Init.role:type_name -> protobuf.Task.Role
	5,  // 14: protobuf.Task.Init.from:type_name -> protobuf.Payment
	5,  // 15: protobuf.Task.Init.to:type_name -> protobuf.Payment
	3,  // 16: protobuf.coordinator.StatusUpdate:input_type -> protobuf.StatusUpdateRequest
	7,  // 17: protobuf.coordinator.Tasks:input_type -> protobuf.TaskResponse
	4,  // 18: protobuf.coordinator.StatusUpdate:output_type -> protobuf.StatusUpdateResponse
	6,  // 19: protobuf.coordinator.Tasks:output_type -> protobuf.Task
	18, // [18:20] is the sub-list for method output_type
	16, // [16:18] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_lncoordinator_proto_init() }
func file_lncoordinator_proto_init() {
	if File_lncoordinator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lncoordinator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelConstraints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lncoordinator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lncoordinator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lncoordinator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lncoordinator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lncoordinator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lncoordinator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lncoordinator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_Init); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lncoordinator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_Swap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lncoordinator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_Cancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lncoordinator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResponse_Init_Done); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lncoordinator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResponse_Payment_Initiated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lncoordinator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResponse_Cancel_Done); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lncoordinator_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResponse_Payment_Locked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lncoordinator_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResponse_Payment_Settled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lncoordinator_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResponse_Swap_Done); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lncoordinator_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResponse_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_lncoordinator_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Task_InitType)(nil),
		(*Task_SwapType)(nil),
		(*Task_CancelType)(nil),
	}
	file_lncoordinator_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*TaskResponse_InitDoneType)(nil),
		(*TaskResponse_PaymentInitiatedType)(nil),
		(*TaskResponse_CancelDoneType)(nil),
		(*TaskResponse_ErrorType)(nil),
		(*TaskResponse_PaymentLockedType)(nil),
		(*TaskResponse_PaymentSettledType)(nil),
		(*TaskResponse_SwapDoneType)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lncoordinator_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lncoordinator_proto_goTypes,
		DependencyIndexes: file_lncoordinator_proto_depIdxs,
		EnumInfos:         file_lncoordinator_proto_enumTypes,
		MessageInfos:      file_lncoordinator_proto_msgTypes,
	}.Build()
	File_lncoordinator_proto = out.File
	file_lncoordinator_proto_rawDesc = nil
	file_lncoordinator_proto_goTypes = nil
	file_lncoordinator_proto_depIdxs = nil
}
